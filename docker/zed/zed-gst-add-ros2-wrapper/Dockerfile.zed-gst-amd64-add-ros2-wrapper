# Copied from Linus's Dockerfile.zed-gst-amd64
# Add zed-ros2-wrapper

FROM docker.io/ros:humble

# Add NVIDIA, ROS2, Ubuntu GPG key
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/7fa2af80.pub
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key F42ED6FBAB17C654
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key 3B4FE6ACC0B21F32
RUN apt-get update

# Install GStreamer
RUN dpkg -P opencv-dev opencv-libs
RUN apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev \
    gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 \
    gstreamer1.0-qt5 gstreamer1.0-pulseaudio

# Install python binding deps
RUN apt-get install -y libgirepository1.0-dev gcc libcairo2-dev pkg-config python3-dev gir1.2-gtk-3.0 \
    python3 python3-pip
RUN pip install pycairo pygobject

# Install CUDA
# RUN apt-get install -y wget linux-headers-$(uname -r)
RUN apt-get install -y wget linux-headers-generic
RUN apt-key del 7fa2af80
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
RUN dpkg -i cuda-keyring_1.1-1_all.deb
RUN apt-get update
RUN apt-get install -y cuda-toolkit
ENV PATH=/usr/local/cuda/bin:/usr/local/cuda/lib64/stubs:$PATH

# Install ZED2 SDK
ENV LOGNAME root
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get install --no-install-recommends lsb-release less zstd udev sudo apt-transport-https -y && \
    wget -q --no-check-certificate -O ZED_SDK_Linux.run https://download.stereolabs.com/zedsdk/4.1/cu121/ubuntu22 && \
    chmod +x ZED_SDK_Linux.run ; ./ZED_SDK_Linux.run silent runtime_only && \
    rm -rf /usr/local/zed/resources/* && \
    rm -rf ZED_SDK_Linux.run && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Install GStreamer ROS bridge
RUN mkdir -p /opt/workspace/src
RUN git clone https://github.com/BrettRD/ros-gst-bridge /opt/workspace/src/gst_bridge

# Install Zed GStreamer plugin
RUN git clone https://github.com/stereolabs/zed-gstreamer.git /opt/workspace/src/zed-gstreamer
RUN touch /opt/workspace/src/zed-gstreamer/COLCON_IGNORE
RUN mkdir /opt/workspace/src/zed-gstreamer/build
WORKDIR /opt/workspace/src/zed-gstreamer/build
RUN cmake -DCMAKE_LIBRARY_PATH= -DCMAKE_BUILD_TYPE=Release ..
RUN make && make install
RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1

# ------------ QV -----------
# Add zed-ros2-wrapper
ARG ZED_ROS2_WRAPPER_PATH

WORKDIR /opt/workspace/src
COPY ${ZED_ROS2_WRAPPER_PATH} /opt/workspace/src/

# For testing only
RUN git clone https://github.com/stereolabs/zed-ros2-examples.git
# ----------------------------

# Build and setup environment
WORKDIR /opt/workspace

# Parameterise path
# COPY .. /opt/workspace/src/zed-gst-ros2 
# RUN . /opt/ros/humble/setup.sh && colcon build
RUN /bin/bash -c "source /opt/ros/$ROS_DISTRO/setup.bash && \
  apt-get update -y || true && \
  rosdep install --from-paths src --ignore-src -r -y && \
  colcon build --parallel-workers $(nproc) --symlink-install \
  --event-handlers console_direct+ --base-paths src \
  --cmake-args ' -DCMAKE_BUILD_TYPE=Release' \
  ' -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs' \
  ' -DCMAKE_CXX_FLAGS="-Wl,--allow-shlib-undefined"' " && \
  rm -rf /var/lib/apt/lists/*
  
ENV GST_PLUGIN_PATH /opt/workspace/install/gst_bridge/lib/gst_bridge
ENV LD_LIBRARY_PATH /usr/local/cuda/lib64/stubs

# RUN chmod +x /opt/workspace/src/zed-gst-ros2/entrypoint-amd64.sh --------FIX THIS
# ENTRYPOINT ["/opt/workspace/src/zed-gst-ros2/entrypoint-amd64.sh"]